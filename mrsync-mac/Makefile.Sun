# ----- start of system dependent section -----

INSTALL  = cp -p 

SUNFLAG  = -D_SUN                                  # -D_SUN on Solaris machines 
IPV6FLAG =                                         # -DIPV6 for IPv6
DEBUG    =                                         # -g -ggdb
CC       = gcc-2.95.3.ren                           # 32-bit compiler
CFLAGS   = -O ${DEBUG} -Wall ${SUNFLAG} ${IPV6FLAG} -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64
LIBS     = -lsocket  # for Solaris
#LIBS     = /usr/local/mtools/nova/lib/lea.Linux.o   # for monster clusters (32-bit lib)

# The directory to install mrsync and others in.
bindir   = /usr/local/bin

# ----- end of system dependent section -------

CLEANFILES =  *.o *~

PROGS =	multicaster multicatcher rtt rttcatcher trFilelist
SCR   = mrsync.py mrsync_config.py cmdToTarget.py
OBJ1  = multicaster.o multicatcher.o \
	parse_synclist.o sends.o complaints.o \
        complaint_sender.o page_reader.o file_operations.o backup.o \
	set_catcher_mcast.o set_mcast.o

OBJ4  = rtt.o rttsends.o rttcomplaints.o \
        rttcatcher.o rttpage_reader.o rttcomplaint_sender.o rttmissings.o

all:		${PROGS}

install:	${PROGS}
		${INSTALL} ${PROGS} ${SCR} ${bindir}

# common files
signal.o:	signal.h

# multicasting
${OBJ1}:	main.h proto.h

multicaster:	multicaster.o global.o setup_socket.o set_mcast.o \
		parse_synclist.o \
		sends.o complaints.o backup.o \
		timing.o signal.o id_map.o
		${CC} ${CFLAGS} -o $@ $^  ${LIBS}

multicatcher:	multicatcher.o global.o setup_socket.o set_catcher_mcast.o \
		page_reader.o complaint_sender.o \
		file_operations.o signal.o timing.o 
		${CC} ${CFLAGS} -o $@ $^  ${LIBS}

# for rtt and rttcatcher
${OBJ4}:	rttmain.h rttproto.h

rtt:		rtt.o setup_socket.o set_mcast.o \
		rttsends.o rttcomplaints.o timing.o signal.o
		${CC} ${CFLAGS} -o $@ $^  ${LIBS}

rttcatcher:	rttcatcher.o setup_socket.o set_catcher_mcast.o \
		rttpage_reader.o rttcomplaint_sender.o rttmissings.o \
		signal.o timing.o
		${CC} ${CFLAGS} -o $@ $^  ${LIBS}

# misc
trFilelist:	trFilelist.o
		${CC} ${CFLAGS} -o $@ $^  ${LIBS}

# to clean up 
clean:
		rm -f ${PROGS} ${CLEANFILES}

